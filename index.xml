<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andreas Fritzler</title>
    <link>https://afritzler.github.io/</link>
    <description>Recent content on Andreas Fritzler</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 12 May 2020 10:56:45 +0200</lastBuildDate>
    
	<atom:link href="https://afritzler.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Projects</title>
      <link>https://afritzler.github.io/projects/</link>
      <pubDate>Tue, 12 May 2020 10:56:45 +0200</pubDate>
      
      <guid>https://afritzler.github.io/projects/</guid>
      <description>Oopsie             Oopsie [/ˈuːpsi/] is a Kubernetes controller that watches all Events within a cluster and enriches failed objects with solutions found on StackOverflow (Github and other sources coming soon).         </description>
    </item>
    
    <item>
      <title>Using Kind together with a Local Docker Registry</title>
      <link>https://afritzler.github.io/posts/using-kind-together-with-a-local-docker-registry/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://afritzler.github.io/posts/using-kind-together-with-a-local-docker-registry/</guid>
      <description>If you want to test your Docker images inside a Kubernetes cluster before pushing them to a public repository, using kind in conjunction with a local repository might be just the solution for you.
Just create a script call kind-with-registry.sh which contains the following code
#!/bin/sh set -o errexit # desired cluster name; default is &amp;#34;kind&amp;#34; KIND_CLUSTER_NAME=&amp;#34;${KIND_CLUSTER_NAME:-kind}&amp;#34; # create registry container unless it already exists reg_name=&amp;#39;kind-registry&amp;#39; reg_port=&amp;#39;5000&amp;#39; running=&amp;#34;$(docker inspect -f &amp;#39;{{.</description>
    </item>
    
  </channel>
</rss>